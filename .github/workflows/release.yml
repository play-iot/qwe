name: release

on:
  push:
    tags:
      - 'v*'

jobs:
  context:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.check.outputs.branch }}

    steps:
      - uses: actions/checkout@v2

      - name: Check
        id: check
        shell: bash
        run: |
          cfgVer=$(grep version gradle.properties | cut -d'=' -f2)
          cfgSemantic=$(grep semanticVersion gradle.properties | cut -d'=' -f2)
          version=$(echo "${{ github.ref }}" | sed -e "s#^refs/tags/v##")
          [[ "$cfgVer$cfgSemantic" == $version ]] || { echo "Release version and tag version is not match"; exit 1; }
          echo ::set-output name=branch::v$version

  build:
    runs-on: ubuntu-latest
    needs: context
    steps:
      - uses: actions/checkout@v2

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v2
        with:
          git_user_signingkey: true
        env:
          GPG_PRIVATE_KEY: ${{ secrets.CI_GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.CI_GPG_PASSPHARSE }}

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Build
        run: ./gradlew clean build -PbuildBy="GitHub Action" -PbuildHash=${{ github.sha }}

      - name: Publish GitHub Package
        run: |
          ./gradlew publish -Psigning.gnupg.homeDir=/home/runner/.gnupg \
                            -Psigning.gnupg.keyName=${{ steps.import_gpg.outputs.keyid }} \
                            -Psigning.gnupg.passphrase=${{ secrets.CI_GPG_PASSPHARSE }} \
                            -Pgithub \
                            -Prelease \
                            -Pnexus.username=${{ github.repository_owner }} \
                            -Pnexus.password=${{ secrets.OSS_GITHUB_TOKEN }}

      - name: Publish Sonatype OSSRH
        run: |
          ./gradlew publish -Psigning.gnupg.homeDir=/home/runner/.gnupg \
                            -Psigning.gnupg.keyName=${{ steps.import_gpg.outputs.keyid }} \
                            -Psigning.gnupg.passphrase=${{ secrets.CI_GPG_PASSPHARSE }} \
                            -Prelease \
                            -Pnexus.username=${{ secrets.OSS_SONATYPE_USER }} \
                            -Pnexus.password=${{ secrets.OSS_SONATYPE_PASSWORD }}

      - name: Promote release Sonatype OSSRH
        run: |
          ./gradlew closeAndReleaseRepository \
                            -Pnexus.username=${{ secrets.OSS_SONATYPE_USER }} \
                            -Pnexus.password=${{ secrets.OSS_SONATYPE_PASSWORD }} || echo 'Need to promote manually'

  analysis:
    runs-on: ubuntu-latest
    needs: context
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Test
        run: ./gradlew jacocoRootReport -PjacocoHtml=false

      - name: SonarQube
        run: ./gradlew sonarqube -Dsonar.login=${{ secrets.OSS_SONARQUBE_TOKEN }} -Dsonar.branch.name=${{ needs.context.outputs.branch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar


  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  next:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
        with:
          ref: main
          token: ${{ secrets.OSS_GITHUB_TOKEN }}

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v2
        with:
          git_user_signingkey: true
          git_commit_gpgsign: true
        env:
          GPG_PRIVATE_KEY: ${{ secrets.CI_GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.CI_GPG_PASSPHARSE }}

      - name: Increase minor version
        run: |
          curVer=$(grep version gradle.properties | cut -d'=' -f2)
          newVer=$(echo $curVer | cut -d'.' --fields 1,2).$(($(echo $curVer | cut -d'.' --fields=3)+1))
          sed -i -e "s/version=.*/version=$newVer/g" gradle.properties
          sed -i -e "s/semanticVersion=.*/semanticVersion=-SNAPSHOT/g" gradle.properties

      - name: GIT commit and push
        run: |
          git commit -S -am "<ci-auto-commit> Increase minor version"
          git show --shortstat --show-signature
          git push
